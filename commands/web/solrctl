#!/usr/bin/env bash
#ddev-generated

## Description: Manage parts of solr
## Usage: solrctl
## Example: ddev solrctl

CMD=$1
YAML_FILE=/mnt/ddev_config/apache-solr/config.yaml
SOLR_VOLUME=.ddev/apache-solr/data
SOLR_HOST=apache-solr

case $CMD in
  apply)
    if [ -n "$2" ];
    then
      YAML_FILE="$PWD/$2"
    fi

    if [ ! -f "$YAML_FILE" ]; then
      echo "Add-on config file $YAML_FILE does not exist."
      exit 1
    fi

    # @todo: Failed to call solr API on $api_url - implement a funtion to check availability
    echo "Apply config $YAML_FILE"

    solr_config="$PWD/$(yq eval '.solr_config' "$YAML_FILE")"
    if [ ! -f "$solr_config" ]; then
      echo "Solr config file $solr_config does not exist."
      exit 1
    fi

    configset="$PWD/$(yq eval '.configset' "$YAML_FILE")"
    if [ ! -d "$configset" ]; then
      echo "Solr configset $configset does not exist."
      exit 1
    fi

    sudo mkdir -p "${SOLR_VOLUME:?}/configsets"
    cp -r "${solr_config}" "$SOLR_VOLUME"
    sudo chmod -R 777 "$SOLR_VOLUME"
    cp -r "$configset" "${SOLR_VOLUME:?}/configsets/$(basename $configset)"
    readarray cores_array < <(yq -o=j -I=0 '.cores.[]' $YAML_FILE)

    for core in "${cores_array[@]}"; do
      name=$(echo "$core" | yq '.name // ""' -)
      schema=$(echo "$core" | yq '.schema // ""' -)

      api_url="http://${SOLR_HOST}:8983/solr/admin/cores?action=CREATE&name=${name}&configSet=$(basename $configset)&schema=${schema}&dataDir=data/"
      response=$(curl -s "$api_url")
      response_code=$?
      status=$(echo $response | yq '.responseHeader.status')

      if [ "$response_code" -gt 0 ]; then
        echo "❌ Failed to call solr API on $api_url"
        exit 1
      fi

      if [ "$status" -eq 0 ]; then
        echo "✅ Core '$name' created"
      else
        error_message=$(echo "$response" | yq '.error.msg')
        echo "ℹ️ $error_message"
      fi
    done
    ;;

  wipe)
    api_url="http://${SOLR_HOST}:8983/solr/admin/cores?action=STATUS&wt=json"
    response=$(curl -s "$api_url")
    response_code=$?
    status=$(echo $response | yq '.responseHeader.status')

    if [ "$response_code" -gt 0 ]; then
      echo "❌ Failed to call solr API on $api_url"
    else
      readarray cores_array < <(echo $response | yq -o=j -I=0 '.status.[] // 0')
      if [ ${#cores_array[@]} -eq 0 ]; then
          echo "ℹ️ No cores available to delete"
          exit 0
      fi

      for core in "${cores_array[@]}"; do
        name=$(echo "$core" | yq '.name // ""' -)
        api_delete_url="http://${SOLR_HOST}:8983/solr/admin/cores?action=UNLOAD&core=$name&deleteIndex=true"
        response=$(curl -s -X POST -H 'Content-type: application/json' "$api_delete_url")
        response_code=$?
        status=$(echo $response | yq '.responseHeader.status')

        if [ "$status" -eq 0 ]; then
            echo "✅ Core '$name' deleted"
        else
            error_message=$(echo "$response" | yq '.error.msg')
            echo "ℹ️ Core '$name' - $error_message"
        fi
      done
    fi

    rm -rf "${SOLR_VOLUME:?}/configsets"
    ;;

  --help|*)
    # @todo: show some useful information
    ;;
esac
